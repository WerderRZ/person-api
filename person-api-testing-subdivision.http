### Create Subdivision
POST {{host}}/subdivisions
Content-Type: application/json

{
  "name": "IT",
  "companiesIds": [
    {{company_id}}
  ]
}

> {%
    client.test("Request executed successfully", function() {
        client.assert(response.status === 201, "Response status is not 201");
    });
    client.test("Headers option exists", function() {
        client.assert(response.headers.valueOf("Content-Type") === "application/json", "Content type isn't JSON");
    });
    client.test("Response body is correct", function () {
        client.assert(response.body.hasOwnProperty("id"), "Cannot find 'id' field");
        client.assert(response.body.name === "IT", "not correct name");
        var companyId = client.global.get("company_id");
        var foundItem = response.body.companiesIds.find(function(item) {
            return item == companyId;
        });
        client.assert(foundItem, "Cannot find '" + companyId + "' field")
    });
    client.global.set("subdivision_id", response.body.id);
%}

### Get Subdivision By ID
GET {{host}}/subdivisions/{{subdivision_id}}
Accept: application/json

> {%
    client.test("Request executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
    client.test("Headers option exists", function() {
        client.assert(response.headers.valueOf("Content-Type") === "application/json", "Content type isn't JSON");
    });
    client.test("Response body is correct", function () {
        client.assert(response.body.name === "IT", "not correct name");
    });
%}

### Get All Subdivisions
GET {{host}}/subdivisions
Accept: application/json

> {%
    client.test("Request executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
    client.test("Headers option exists", function() {
        client.assert(response.headers.valueOf("Content-Type") === "application/json", "Content type isn't JSON");
    });
    client.test("Response body is correct", function () {
        var subdivisionId = client.global.get("subdivision_id");
        var foundItem = response.body.find(function(item) {
            return item.id == subdivisionId;
        });
        client.assert(foundItem, "Cannot find '" + subdivisionId + "' field")
    });
%}
